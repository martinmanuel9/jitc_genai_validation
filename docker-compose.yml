services:
  postgres:
    image: postgres:17
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rag_memory
    volumes:
      - pg_data:/var/lib/postgresql/data

  chromadb:
    build:
      context: ./src/chromadb
      dockerfile: Dockerfile
    container_name: chromadb
    ports:
      - "8020:8020"
    environment:
      - CHROMADB_PERSIST_DIRECTORY=/app/chroma_db_data
    volumes:
      - chromadb_data:/app/chroma_db_data

  llama3:
    image: ollama/ollama
    container_name: llama3
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - llama3_data:/root/.ollama
    entrypoint: ["/bin/sh", "-c", "ollama serve"]

  fastapi:
    build:
      context: ./src/fastapi
      dockerfile: Dockerfile.fastapi
    container_name: fastapi
    ports:
      - "9020:9020"
    env_file:
      - .env
    environment:
      - HUGGINGFACE_HUB_TOKEN=${HUGGINGFACE_API_KEY}
      - OPEN_AI_API_KEY=${OPEN_AI_API_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - DATABASE_URL=postgresql://user:password@postgres_db:5432/rag_memory
    depends_on:
      - postgres
      - chromadb
      - llama3
    volumes:
      - ./src/fastapi/pyproject.toml:/app/pyproject.toml
      - ./src/fastapi/poetry.lock:/app/poetry.lock

  streamlit:
    build:
      context: .
      dockerfile: src/streamlit_app/Dockerfile.streamlit
      args:
        HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
    container_name: streamlit_ui
    ports:
      - "8501:8501"
    depends_on:
      - fastapi
      - chromadb
      - llama3
      - postgres

    env_file:
      - .env
    environment:
      - HUGGINGFACE_HUB_TOKEN=${HUGGINGFACE_API_KEY}
      - STREAMLIT_WATCH_FILES=false
    volumes:
      - ./src/streamlit_app/pyproject.toml:/app/pyproject.toml
      - ./src/streamlit_app/poetry.lock:/app/poetry.lock

volumes:
  chromadb_data:
  llama3_data:
  pg_data:
